/**
 * Test de Login Autom√°tico con Playwright
 * Este test iniciar√° sesi√≥n autom√°ticamente y te llevar√° al dashboard
 */

import { test, expect } from '@playwright/test';

test.describe('Login Autom√°tico', () => {
    test('Iniciar sesi√≥n y acceder al dashboard', async ({ page }) => {
        console.log('üöÄ Iniciando proceso de login autom√°tico...');

        // Ir a la p√°gina de login
        await page.goto('/login');
        console.log('‚úÖ Navegado a la p√°gina de login');

        // Llenar credenciales autom√°ticamente
        await page.fill('input[name="email"]', 'admin@test.com');
        await page.fill('input[name="password"]', 'password');
        console.log('‚úÖ Credenciales ingresadas autom√°ticamente');

        // Hacer click en el bot√≥n de login
        await page.click('button[type="submit"]');
        console.log('‚úÖ Bot√≥n de login presionado');

        // Esperar a que redirija al dashboard
        await page.waitForURL('/dashboard');
        console.log('‚úÖ Redirigido al dashboard exitosamente');

        // Verificar que estamos en el dashboard
        await expect(page).toHaveTitle('Sistema Administrativo');
        await expect(page).toHaveURL(/.*\/dashboard/);
        console.log('‚úÖ Confirmado: Est√°s en el dashboard del Sistema Administrativo');

        // Verificar que el dropdown de reportes existe
        const reporteButton = page.locator('#reporteButton');
        await expect(reporteButton).toBeVisible();
        console.log('‚úÖ Dropdown de reportes disponible');

        // Tomar screenshot del dashboard
        await page.screenshot({ path: 'dashboard-logueado.png', fullPage: true });
        console.log('üì∏ Screenshot guardado como dashboard-logueado.png');

        // Probar el dropdown de reportes
        await reporteButton.click();
        const dropdown = page.locator('#reporteDropdown');
        await expect(dropdown).toBeVisible();
        console.log('‚úÖ Dropdown de reportes funciona correctamente');

        await page.screenshot({ path: 'dropdown-abierto.png' });
        console.log('üì∏ Screenshot del dropdown guardado como dropdown-abierto.png');

        // Verificar que las m√©tricas del d√≠a se muestran
        const metricas = await page.locator('text=/\\$[\\d,]+/').count();
        console.log(`‚úÖ M√©tricas encontradas: ${metricas} valores monetarios mostrados`);

        // Mantener la p√°gina abierta por 30 segundos para que puedas ver
        console.log('‚è∞ Manteniendo la p√°gina abierta por 30 segundos...');
        console.log('üéØ ¬°PUEDES VER EL SISTEMA FUNCIONANDO AHORA!');
        await page.waitForTimeout(30000);

        console.log('‚ú® ¬°Login autom√°tico completado exitosamente!');
    });

    test('Verificar todas las funcionalidades principales', async ({ page }) => {
        console.log('üîç Verificando todas las funcionalidades...');

        // Login autom√°tico
        await page.goto('/login');
        await page.fill('input[name="email"]', 'admin@test.com');
        await page.fill('input[name="password"]', 'password');
        await page.click('button[type="submit"]');
        await page.waitForURL('/dashboard');

        // Verificar navegaci√≥n
        const navLinks = page.locator('nav a');
        const navCount = await navLinks.count();
        console.log(`‚úÖ Enlaces de navegaci√≥n encontrados: ${navCount}`);

        // Verificar acciones r√°pidas
        const accionesRapidas = page.locator('[class*="grid"] [class*="bg-gradient"]');
        const accionesCount = await accionesRapidas.count();
        console.log(`‚úÖ Acciones r√°pidas disponibles: ${accionesCount}`);

        // Probar dropdown y verificar enlaces
        await page.click('#reporteButton');
        const pdfLink = page.locator('a[href*="formato=pdf"]');
        const csvLink = page.locator('a[href*="formato=csv"]');

        await expect(pdfLink).toBeVisible();
        await expect(csvLink).toBeVisible();
        console.log('‚úÖ Enlaces de descarga PDF y CSV verificados');

        // Verificar que el sistema est√° funcionando
        await expect(page.locator('text=Dashboard')).toBeVisible();
        console.log('‚úÖ Dashboard completamente funcional');

        console.log('üéâ ¬°Todas las funcionalidades verificadas correctamente!');
    });
});
